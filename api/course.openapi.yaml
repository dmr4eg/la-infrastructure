openapi: 3.0.3
info:
  title: Project & Day API
  version: 1.0.0
  description: An OpenAPI specification for project management, day templates, tasks, forms, media, and related user progress tracking.
servers:
  - url: https://app.little.pm/api/course

########################################################
# COMPONENTS
########################################################
components:
  ######################################################
  # HEADERS
  ######################################################
  headers:
    Set-JWT:
      schema:
        type: string
        description: JWT token
        example: "jwt=tokenValue; Path=/; HttpOnly; Secure"
    Clear-JWT:
      schema:
        type: string
        description: JWT token clear
        example: "jwt=; Expires=Thu, 01 Jan 1970 00:00:00 GMT; Path=/;"
    HomeRedirect:
      schema:
        type: string
        description: Home redirect
        example: /
    LoginRedirect:
      schema:
        type: string
        description: Login redirect
        example: /auth/login

  ######################################################
  # SECURITY SCHEMES
  ######################################################
  securitySchemes:
    admin_jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
    user_jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT

  ######################################################
  # RESPONSES
  ######################################################
  responses:
    UnauthorizedLoginError:
      description: Unauthorized login
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    UnauthorizedError:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    AuthorizationSuccess:
      description: OK
      headers:
        Set-Cookie:
          $ref: "#/components/headers/Set-JWT"
        Location:
          $ref: "#/components/headers/HomeRedirect"
    UnauthorizationSuccess:
      description: OK
      headers:
        Set-Cookie:
          $ref: "#/components/headers/Clear-JWT"
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotAcceptable:
      description: Not Acceptable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  ######################################################
  # PARAMETERS
  ######################################################
  parameters:
    limit:
      name: limit
      description: Limit of the list
      example: 10
      in: query
      required: true
      schema:
        type: integer

    offset:
      name: offset
      description: Offset of the list
      example: 0
      in: query
      required: true
      schema:
        type: integer

    sortOrder:
      name: sortOrder
      in: query
      description: "Order or position (general integer query usage)"
      required: true
      schema:
        $ref: "#/components/schemas/sortOrder"

    componentUUID:
      name: component_uuid
      in: path
      description: "Component UUID in the path"
      required: true
      schema:
        $ref: "#/components/schemas/componentUUID"

    projectBlueprintUUID:
      name: project_blueprint_uuid
      in: path
      required: true
      description: "The UUID of the project blueprint"
      schema:
        $ref: "#/components/schemas/projectBlueprintUUID"

    dayBlueprintUUID:
      name: day_blueprint_uuid
      in: path
      required: true
      description: "The UUID of the day blueprint"
      schema:
        $ref: "#/components/schemas/dayBlueprintUUID"

    userUUID:
      name: user_uuid
      in: path
      required: true
      description: "The UUID of the user"
      schema:
        $ref: "#/components/schemas/userUUID"

  ######################################################
  # SCHEMAS
  ######################################################
  schemas:
    projectBlueprintUUID:
      type: string
      format: uuid
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      description: "UUID for a Project Blueprint"

    dayBlueprintUUID:
      type: string
      format: uuid
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      description: "UUID for a Day Blueprint"

    componentUUID:
      type: string
      format: uuid
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      description: "UUID for a Day Component"

    taskBlueprintUUID:
      type: string
      format: uuid
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      description: "UUID for a Task Blueprint"

    formBlueprintUUID:
      type: string
      format: uuid
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      description: "UUID for a Form Blueprint"

    fieldUUID:
      type: string
      format: uuid
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      description: "UUID for a Form Field"

    mediaUUID:
      type: string
      format: uuid
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      description: "UUID for a Media resource"

    userUUID:
      type: string
      format: uuid
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      description: "UUID for a User"

    sortOrder:
      type: integer
      description: "Order or position within a list"

    Error:
      type: object
      description: Error object
      example:
        message: "Error message"
      properties:
        message:
          type: string
          description: Error message
      required:
        - message

    ######################################################
    # Composite ID Schemas
    ######################################################
    ProjectDaysMapperId:
      type: object
      description: "Composite ID for ProjectDaysMapper"
      example:
        project_blueprint: "665c599d-5c8d-4d20-aaab-7ffaba150606"
        day: "557c482c-8bb5-4a65-9bef-848a953238ae"
      properties:
        project_blueprint_uuid:
          $ref: "#/components/schemas/projectBlueprintUUID"
        day_blueprint_uuid:
          $ref: "#/components/schemas/dayBlueprintUUID"
      required:
        - project_blueprint_uuid
        - day_blueprint_uuid

    ProjectInstanceId:
      type: object
      description: "Composite ID for ProjectInstance"
      example:
        project_blueprint_uuid: "665c599d-5c8d-4d20-aaab-7ffaba150606"
        user_uuid: "66de88ad-5c8d-4d20-a0ab-bbb7ccc15333"
      properties:
        project_blueprint_uuid:
          $ref: "#/components/schemas/projectBlueprintUUID"
        user_uuid:
          $ref: "#/components/schemas/userUUID"
      required:
        - project_blueprint_uuid
        - user_uuid

    FinancesId:
      type: object
      description: "Composite ID for Finances"
      example:
        project_blueprint_uuid: "665c599d-5c8d-4d20-aaab-7ffaba150606"
        user_uuid: "66de88ad-5c8d-4d20-a0ab-bbb7ccc15333"
      properties:
        project_blueprint_uuid:
          $ref: "#/components/schemas/projectBlueprintUUID"
        user_uuid:
          $ref: "#/components/schemas/userUUID"
      required:
        - project_blueprint_uuid
        - user_uuid

    MembersId:
      type: object
      description: "Composite ID for Members"
      example:
        project_blueprint_uuid: "665c599d-5c8d-4d20-aaab-7ffaba150606"
        user_uuid: "66de88ad-5c8d-4d20-a0ab-bbb7ccc15333"
      properties:
        project_blueprint_uuid:
          $ref: "#/components/schemas/projectBlueprintUUID"
        user_uuid:
          $ref: "#/components/schemas/userUUID"
      required:
        - project_blueprint_uuid
        - user_uuid

    DayComponentsMapperId:
      type: object
      description: "Composite ID for DayComponentsMapper"
      example:
        day_blueprint_uuid: "665c599d-5c8d-4d20-aaab-7ffaba150606"
        component_uuid: "a8494f64-0987-4dd0-8405-df19eb58f2ab"
      properties:
        day_blueprint_uuid:
          $ref: "#/components/schemas/dayBlueprintUUID"
        component_uuid:
          $ref: "#/components/schemas/componentUUID"
      required:
        - day_blueprint_uuid
        - component_uuid

    DayInstanceId:
      type: object
      description: "Composite ID for DayInstance"
      example:
        day_blueprint_uuid: "665c599d-5c8d-4d20-aaab-7ffaba150606"
        user_uuid: "66de88ad-5c8d-4d20-a0ab-bbb7ccc15333"
      properties:
        day_blueprint_uuid:
          $ref: "#/components/schemas/dayBlueprintUUID"
        user_uuid:
          $ref: "#/components/schemas/userUUID"
      required:
        - day_blueprint_uuid
        - user_uuid

    ######################################################
    # PROJECT
    ######################################################
    ProjectBlueprint:
      type: object
      properties:
        project_blueprint_uuid:
          $ref: "#/components/schemas/projectBlueprintUUID"
        poster_url:
          type: string
          description: "URL for the project poster image"
        welcome_video_url:
          type: string
          description: "URL for the project introduction video"
        title:
          type: string
        description:
          type: string
        difficulty:
          type: string
          enum:
            - "EASY"
            - "MEDIUM"
            - "HARD"
        style:
          type: string
          enum:
            - "DIY"
            - "READY-MADE"
      required:
        - project_blueprint_uuid
        - title

    ProjectDaysMapper:
      type: object
      description: "Entity for mapping days within a project"
      example:
        id:
          project_blueprint_uuid: "665c599d-5c8d-4d20-aaab-7ffaba150606"
          day_blueprint_uuid: "557c482c-8bb5-4a65-9bef-848a953238ae"
        sortOrder: 1
      properties:
        id:
          $ref: "#/components/schemas/ProjectDaysMapperId"
          readOnly: true
        sortOrder:
          $ref: "#/components/schemas/sortOrder"
      required:
        - id
        - sortOrder

    ProjectInstance:
      type: object
      description: "Entity for a user's specific project instance"
      example:
        id:
          project_blueprint_uuid: "665c599d-5c8d-4d20-aaab-7ffaba150606"
          user_uuid: "66de88ad-5c8d-4d20-a0ab-bbb7ccc15333"
        status: "IN_PROGRESS"
        start_date: "2021-09-01T10:00:00Z"
      properties:
        id:
          $ref: "#/components/schemas/ProjectInstanceId"
          readOnly: true
        status:
          type: string
          enum:
            - "IN_PROGRESS"
            - "COMPLETED"
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        feedback:
          type: string
        what_went_well:
          type: string
      required:
        - id
        - status

    Finances:
      type: object
      description: "Entity for user finances on a specific project"
      example:
        id:
          project_blueprint_uuid: "665c599d-5c8d-4d20-aaab-7ffaba150606"
          user_uuid: "66de88ad-5c8d-4d20-a0ab-bbb7ccc15333"
        investor_gave: 100.0
        investor_return: 120.0
      properties:
        id:
          $ref: "#/components/schemas/FinancesId"
          readOnly: true
        investor_gave:
          type: number
          format: float
        investor_return:
          type: number
          format: float
        spent_budget:
          type: number
          format: float
        toys_planned:
          type: number
          format: float
        toys_sold:
          type: number
          format: float
        toys_left:
          type: number
          format: float
        members_budget:
          type: number
          format: float
        profit:
          type: number
          format: float
        expense_amount:
          type: number
          format: float
        calculated_budget:
          type: number
          format: float
        items_cost:
          type: number
          format: float
        recommended_price:
          type: number
          format: float
        price_per_item:
          type: number
          format: float
        sold_price:
          type: number
          format: float
      required:
        - id

    Members:
      type: object
      description: "Entity for user membership in a specific project"
      example:
        id:
          project_blueprint_uuid: "665c599d-5c8d-4d20-aaab-7ffaba150606"
          user_uuid: "66de88ad-5c8d-4d20-a0ab-bbb7ccc15333"
        member_name: "John Doe"
      properties:
        id:
          $ref: "#/components/schemas/MembersId"
          readOnly: true
        member_name:
          type: string
      required:
        - id
        - member_name

    ProjectDTO:
      type: object
      properties:
        blueprint:
          $ref: "#/components/schemas/ProjectBlueprint"
        instance:
          $ref: "#/components/schemas/ProjectInstance"
      required:
        - blueprint
        - instance

    ######################################################
    # DAY
    ######################################################
    DayBlueprint:
      type: object
      properties:
        day_blueprint_uuid:
          $ref: "#/components/schemas/dayBlueprintUUID"
        title:
          type: string
        description:
          type: string
        text:
          type: string
      required:
        - day_blueprint_uuid
        - title

    DayComponentsMapper:
      type: object
      description: "Mapping of components (tasks, forms, media) within a day"
      example:
        id:
          day_blueprint_uuid: "665c599d-5c8d-4d20-aaab-7ffaba150606"
          component_uuid: "a8494f64-0987-4dd0-8405-df19eb58f2ab"
        type: "TASK"
      properties:
        id:
          $ref: "#/components/schemas/DayComponentsMapperId"
          readOnly: true
        type:
          type: string
          enum:
            - "TASK"
            - "FORM"
            - "MEDIA"
        sortOrder:
          $ref: "#/components/schemas/sortOrder"
      required:
        - id
        - type
        - sortOrder

    DayInstance:
      type: object
      description: "Specific instance of a day for a user"
      example:
        id:
          day_blueprint_uuid: "665c599d-5c8d-4d20-aaab-7ffaba150606"
          user_uuid: "66de88ad-5c8d-4d20-a0ab-bbb7ccc15333"
        status: "IN_PROGRESS"
      properties:
        id:
          $ref: "#/components/schemas/DayInstanceId"
          readOnly: true
        status:
          type: string
          enum:
            - "IN_PROGRESS"
            - "COMPLETED"
            - "NOT_STARTED"
      required:
        - id
        - status

    DayDTO:
      type: object
      properties:
        blueprint:
          $ref: "#/components/schemas/DayBlueprint"
        instance:
          $ref: "#/components/schemas/DayInstance"
      required:
        - blueprint
        - instance

########################################################
# TAGS
########################################################
tags:
  - name: projects
    description: APIs for managing projects, day templates, and user progress tracking.
  - name: days
    description: APIs for managing day templates and their instances.
  - name: finances
    description: APIs for managing finances related to projects and users.
  - name: members
    description: APIs for managing members within projects.

########################################################
# PATHS
########################################################
paths:
  ######################################################
  # SINGLE-ID RESOURCES (Blueprints, etc.)
  ######################################################
  /projects:
    get:
      tags: [projects]
      summary: List project blueprints
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: A list of project blueprints
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectBlueprint"
    post:
      tags: [projects]
      summary: Create new project blueprint (admin only)
      security:
        - admin_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectBlueprint"
      responses:
        "200":
          description: The created project blueprint
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectBlueprint"

  /projects/{project_blueprint_uuid}:
    parameters:
      - $ref: "#/components/parameters/projectBlueprintUUID"
    get:
      tags: [projects]
      summary: Get project blueprint details
      responses:
        "200":
          description: Project blueprint
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectBlueprint"
    put:
      tags: [projects]
      summary: Update an existing project blueprint (admin only)
      security:
        - admin_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectBlueprint"
      responses:
        "200":
          description: Updated project blueprint
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectBlueprint"
    delete:
      tags: [projects]
      summary: Delete a project blueprint (admin only)
      security:
        - admin_jwt: []
      responses:
        "204":
          description: No Content

  /days:
    get:
      tags: [days]
      summary: List day templates
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: A list of day blueprints
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DayBlueprint"
    post:
      tags: [days]
      summary: Create day template (admin only)
      security:
        - admin_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DayBlueprint"
      responses:
        "200":
          description: Created day blueprint
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DayBlueprint"

  /days/{day_blueprint_uuid}:
    parameters:
      - $ref: "#/components/parameters/dayBlueprintUUID"
    get:
      tags: [days]
      summary: Get day template details
      responses:
        "200":
          description: Day blueprint
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DayBlueprint"
    put:
      tags: [days]
      summary: Update day template (admin only)
      security:
        - admin_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DayBlueprint"
      responses:
        "200":
          description: Updated day blueprint
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DayBlueprint"
    delete:
      tags: [days]
      summary: Delete day template (admin only)
      security:
        - admin_jwt: []
      responses:
        "204":
          description: No Content

  ######################################################
  # COMPOSITE-ID RESOURCES
  ######################################################

  ############################################
  # 1) PROJECT-DAYS-MAPPER
  ############################################
  /project-days-mapper:
    get:
      tags: [projects]
      summary: List all project-day mappings
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: A list of ProjectDaysMapper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectDaysMapper"
    post:
      tags: [projects]
      summary: Create a new project-day mapping (admin only)
      security:
        - admin_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectDaysMapper"
      responses:
        "200":
          description: Created project-day mapping
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDaysMapper"

  /project-days-mapper/{project_blueprint_uuid}/{day_blueprint_uuid}:
    parameters:
      - $ref: "#/components/parameters/projectBlueprintUUID"
      - $ref: "#/components/parameters/dayBlueprintUUID"
    get:
      tags: [projects]
      summary: Get a specific project-day mapping
      responses:
        "200":
          description: A single ProjectDaysMapper
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDaysMapper"
    put:
      tags: [projects]
      summary: Update a specific project-day mapping (admin only)
      security:
        - admin_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectDaysMapper"
      responses:
        "200":
          description: Updated mapping
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDaysMapper"
    delete:
      tags: [projects]
      summary: Delete project-day mapping (admin only)
      security:
        - admin_jwt: []
      responses:
        "204":
          description: No Content

  ############################################
  # 2) DAY-COMPONENTS-MAPPER
  ############################################
  /day-components-mapper:
    get:
      tags: [days]
      summary: List all day-component mappings
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: A list of DayComponentsMapper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DayComponentsMapper"
    post:
      tags: [days]
      summary: Create a new day-component mapping (admin only)
      security:
        - admin_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DayComponentsMapper"
      responses:
        "200":
          description: Created day-component mapping
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DayComponentsMapper"

  /day-components-mapper/{day_blueprint_uuid}/{component_uuid}:
    parameters:
      - $ref: "#/components/parameters/dayBlueprintUUID"
      - $ref: "#/components/parameters/componentUUID"
    get:
      tags: [days]
      summary: Get a specific day-component mapping
      responses:
        "200":
          description: DayComponentsMapper
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DayComponentsMapper"
    put:
      tags: [days]
      summary: Update a day-component mapping (admin only)
      security:
        - admin_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DayComponentsMapper"
      responses:
        "200":
          description: Updated mapping
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DayComponentsMapper"
    delete:
      tags: [days]
      summary: Delete day-component mapping (admin only)
      security:
        - admin_jwt: []
      responses:
        "204":
          description: No Content

  ############################################
  # 3) PROJECT-INSTANCES
  ############################################
  /project-instances:
    get:
      tags: [projects]
      summary: List all project instances
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/userUUID"
      security:
        - user_jwt: []
      responses:
        "200":
          description: A list of ProjectInstance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectDTO"
    post:
      tags: [projects]
      summary: Create a new project instance (user)
      security:
        - user_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectInstance"
      responses:
        "200":
          description: Created project instance
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDTO"

  /project-instances/{project_blueprint_uuid}/{user_uuid}:
    parameters:
      - $ref: "#/components/parameters/projectBlueprintUUID"
      - $ref: "#/components/parameters/userUUID"
    get:
      tags: [projects]
      summary: Get a specific project instance
      security:
        - user_jwt: []
      responses:
        "200":
          description: ProjectInstance
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDTO"
    put:
      tags: [projects]
      summary: Update a project instance (user)
      security:
        - user_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectInstance"
      responses:
        "200":
          description: Updated project instance
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDTO"
    delete:
      tags: [projects]
      summary: Delete a project instance (admin or user)
      # Decide on your actual policy
      security:
        - admin_jwt: []
      responses:
        "204":
          description: No Content

  ############################################
  # 4) FINANCES
  ############################################
  /finances:
    get:
      tags: [finances]
      summary: List all finances records
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      security:
        - user_jwt: []
      responses:
        "200":
          description: A list of Finances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Finances"
    post:
      tags: [finances]
      summary: Create new finances record
      security:
        - user_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Finances"
      responses:
        "200":
          description: Created finances
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Finances"

  /finances/{project_blueprint_uuid}/{user_uuid}:
    parameters:
      - $ref: "#/components/parameters/projectBlueprintUUID"
      - $ref: "#/components/parameters/userUUID"
    get:
      tags: [finances]
      summary: Get finances record
      security:
        - user_jwt: []
      responses:
        "200":
          description: Finances
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Finances"
    put:
      tags: [finances]
      summary: Update finances record
      security:
        - user_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Finances"
      responses:
        "200":
          description: Updated finances
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Finances"
    delete:
      tags: [finances]
      summary: Delete finances record
      security:
        - user_jwt: []
      responses:
        "204":
          description: No Content

  /finances/{project_blueprint_uuid}/{user_uuid}/calculate:
    parameters:
      - $ref: "#/components/parameters/projectBlueprintUUID"
      - $ref: "#/components/parameters/userUUID"
    put:
      tags: [finances]
      summary: Calculate or recalculate finances
      security:
        - user_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Finances"
      responses:
        "200":
          description: Calculated finances
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Finances"

  ############################################
  # 5) MEMBERS
  ############################################
  /members:
    get:
      tags: [members]
      summary: List all members records
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      security:
        - user_jwt: []
      responses:
        "200":
          description: A list of Members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Members"
    post:
      tags: [members]
      summary: Create new members record
      security:
        - user_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Members"
      responses:
        "200":
          description: Created members record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Members"

  /members/{project_blueprint_uuid}/{user_uuid}:
    parameters:
      - $ref: "#/components/parameters/projectBlueprintUUID"
      - $ref: "#/components/parameters/userUUID"
    get:
      tags: [members]
      summary: Get one member record
      security:
        - user_jwt: []
      responses:
        "200":
          description: Members
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Members"
    put:
      tags: [members]
      summary: Update a member record
      security:
        - user_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Members"
      responses:
        "200":
          description: Updated member
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Members"
    delete:
      tags: [members]
      summary: Delete a member record
      security:
        - user_jwt: []
      responses:
        "204":
          description: No Content

  ############################################
  # 6) DAY-INSTANCES
  ############################################
  /day-instances:
    get:
      tags: [days]
      summary: List all day instances
      parameters:
        - $ref: "#/components/parameters/userUUID"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      security:
        - user_jwt: []
      responses:
        "200":
          description: A list of DayInstance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DayDTO"
    post:
      tags: [days]
      summary: Create a day instance
      security:
        - user_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DayInstance"
      responses:
        "200":
          description: Created day instance
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DayDTO"

  /day-instances/{day_blueprint_uuid}/{user_uuid}:
    parameters:
      - $ref: "#/components/parameters/dayBlueprintUUID"
      - $ref: "#/components/parameters/userUUID"
    get:
      tags: [days]
      summary: Get a specific day instance
      security:
        - user_jwt: []
      responses:
        "200":
          description: DayInstance
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DayDTO"
    put:
      tags: [days]
      summary: Update a day instance
      security:
        - user_jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DayInstance"
      responses:
        "200":
          description: Updated day instance
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DayDTO"
    delete:
      tags: [days]
      summary: Delete a day instance
      security:
        - user_jwt: []
      responses:
        "204":
          description: No Content
