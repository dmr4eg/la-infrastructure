apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: be-content
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    # cert-manager.io/cluster-issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/auth-url: "https://localhost/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://localhost/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization, X-Auth-Request-User, X-Auth-Request-Email"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # Forward the bearer token oauth2-proxy gives us
      auth_request_set $access_token $upstream_http_authorization;
      proxy_set_header Authorization $access_token;
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE, PATCH"
    nginx.ingress.kubernetes.io/cors-allow-headers: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/x-forwarded-prefix: /api/content
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - localhost
      secretName: localhost-tls
  rules:
    - host: localhost
      http:
        paths:
          - path: /api/content(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: content-service
                port:
                  name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: be-course
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    # cert-manager.io/cluster-issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/auth-url: "https://localhost/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://localhost/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization, X-Auth-Request-User, X-Auth-Request-Email"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request_set $access_token $upstream_http_authorization;
      proxy_set_header Authorization $access_token;
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE, PATCH"
    nginx.ingress.kubernetes.io/cors-allow-headers: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/x-forwarded-prefix: /api/course
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - localhost
      secretName: localhost-tls
  rules:       
    - host: localhost
      http:
        paths:       
        - path: /api/course(/|$)(.*)
          pathType: ImplementationSpecific
          backend:
            service:
              name: course-service
              port:
                name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fe
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    # cert-manager.io/cluster-issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE, PATCH"
    nginx.ingress.kubernetes.io/cors-allow-headers: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"

spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - localhost
      secretName: localhost-tls
  rules:
    - host: localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 80
