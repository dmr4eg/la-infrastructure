@startuml

!theme plain

skinparam linetype ortho

skinparam package {
    FontSize 11
    FontStyle bold
    BackgroundColor #F0F0F0
}

package "project" {
    class ProjectBlueprint {
        * projectBlueprintUuid: UUID
        * difficulty: DifficultyEnum
        * posterUrl: String
        * description: String
        * welcomeVideoUrl: String
        * title: String
        * style: StyleEnum
    }

    class ProjectInstanceId {
        * projectBlueprintUuid: UUID
        * userUuid: UUID
    }

    class ProjectInstance {
        * id: ProjectInstanceId
        * endDate: OffsetDateTime
        * startDate: OffsetDateTime
        * feedback: String
        * status: StatusEnum
        * whatWentWell: String
    }

    class ProjectDTO {
        * blueprint: ProjectBlueprint
        * instance: ProjectInstance
    }

    class ProjectDaysMapperId {
        * projectBlueprintUuid: UUID
        * dayBlueprintUuid: UUID
    }

    class ProjectDaysMapper {
        * id: ProjectDaysMapperId
        * sortOrder: Integer
    }

}

package "membership" {
    class Members {
        * id: MemberId
        * membersName: String
    }
    
    class MembersId {
        * projectBlueprintUuid: UUID
        * userUuid: UUID
    }
}

package "day" {
    class DayBlueprint {
        * dayBlueprintUuid: UUID
        * description: String
        * text: String
        * title: String
    }

    class DayInstanceId {
        * dayBlueprintUuid: UUID
        * userUuid: UUID
    }

    class DayInstance {
        * id: DayInstanceId
        * status: StatusEnum
    }

    class DayDTO {
        * blueprint: DayBlueprint
        * instance: DayInstance
    }

    class DayComponentsMapperId {
        * dayBlueprintUuid: UUID
        * componentUuid: UUID
    }

    class DayComponentsMapper {
        * id: DayComponentsMapperId
        * sortOrder: Integer
        * type: TypeEnum
    }
}

package "content" {
    package "form" {
        class FormBlueprint {
            * formBlueprintUuid: UUID
            * callbackUrl: String
            * title: String
            * description: String
        }

        class FormInstanceId {
            * formBlueprintUuid: UUID
            * userUuid: UUID
        }

        class FormInstance {
            * id: FormInstanceId
            * status: Boolean
        }

        class FormDTO {
            * blueprint: FormBlueprint
            * instance: FormInstance
        }

        class FormFieldMapperId {
            * formBlueprintUuid: UUID
            * fieldUuid: UUID
        }

        class FormFieldMapper {
            * id: FormFieldMapperId
            * sortOrder: Integer
        }

        class Field {
            * fieldUuid: UUID
            * description: String
            * title: String
            * inputType: InputTypeEnum
            * required: Boolean
        }
    }

    package "task" {
        class TaskBlueprint {
            * taskBlueprintUuid: UUID
            * title: String
            * description: String
        }

        class TaskInstanceId {
            * taskBlueprintUuid: UUID
            * userUuid: UUID
        }

        class TaskInstance {
            * id: TaskInstanceId
            * status: Boolean
        }

        class TaskDTO {
            * blueprint: TaskBlueprint
            * instance: TaskInstance
        }
    }

    package "media" {
        class Media {
            * mediaUUID: UUID
            * type: TypeEnum
            * url: String
            * description: String
            * title: String
        }
    }
}
package "finance" {
    class FinancesId {
        * projectBlueprintUuid: UUID
        * userUuid: UUID
    }
    class Finances {
        * id: FinancesId
        * itemsCost: Float
        * soldPrice: Float
        * toysSold: Float
        * toysLeft: Float
        * investorReturn: Float
        * recommendedPrice: Float
        * investorGave: Float
        * calculatedBudget: Float
        * membersBudget: Float
        * pricePerItem: Float
        * toysPlanned: Float
        * profit: Float
        * expenseAmount: Float
        * spentBudget: Float
    }
}
FinancesId       "1" -down-> "1" ProjectInstanceId
FinancesId       "N" -down-> "1" ProjectBlueprint
Finances         "1" *-left- "1" FinancesId

MembersId        "N" -down-> "1" ProjectInstanceId
Members        "1" -left-> "1" MembersId

ProjectInstanceId "N" -left-> "1" ProjectBlueprint
ProjectInstance  "1" *-left- "1" ProjectInstanceId
ProjectDTO       "N" *-left-> "1" ProjectBlueprint
ProjectDTO       "1" *-left-> "1" ProjectInstance

ProjectDaysMapperId "N" -up-> "1" ProjectBlueprint
ProjectDaysMapperId "N" -down-> "1" DayBlueprint
ProjectDaysMapper "1" *-left- "1" ProjectDaysMapperId

DayInstanceId    "N" -left-> "1" DayBlueprint
DayInstance      "1" *-left- "1" DayInstanceId
DayDTO           "N" *-left-> "1" DayBlueprint
DayDTO           "1" *-left-> "1" DayInstance

DayComponentsMapperId "N" -up-> "1" DayBlueprint
DayComponentsMapperId "N" -down-> "1" Media
DayComponentsMapperId "N" -down-> "1" TaskBlueprint
DayComponentsMapperId "N" -down-> "1" FormBlueprint

DayComponentsMapper "1" *-left- "1" DayComponentsMapperId

TaskInstanceId   "N" -up-> "1" TaskBlueprint
TaskInstance     "1" *-up- "1" TaskInstanceId
TaskDTO          "N" *-up-> "1" TaskBlueprint
TaskDTO          "1" *-up-> "1" TaskInstance

FormInstanceId    "N" -up-> "1" FormBlueprint
FormInstance     "1" *-up- "1" FormInstanceId
FormDTO          "N" *-up-> "1" FormBlueprint
FormDTO          "1" *-up-> "1" FormInstance

FormFieldMapperId "N" -left-> "1" FormBlueprint
FormFieldMapper  "1" *-up- "1" FormFieldMapperId
FormFieldMapperId "N" -right-> "1" Field

media -right[hidden]-> task
task -right[hidden]-> form

@enduml